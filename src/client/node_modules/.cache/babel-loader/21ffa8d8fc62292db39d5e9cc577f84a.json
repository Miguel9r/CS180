{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ifnav\\\\Documents\\\\cs180\\\\CS180\\\\src\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: '',\n      post: '',\n      responseToPost: '',\n      query: {\n        Distance: null,\n        Company: \"Uber\",\n        Timestamp: \"1544952607890\",\n        Destination: null,\n        Source: \"Back Bay\",\n        Price: null,\n        SurgeMultiplier: null,\n        CabType: null\n      }\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/hello');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/api/query', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.query)\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      });\n    };\n  }\n\n  setDistance(e) {\n    e.persist();\n    this.setState(prev => {\n      let query = { ...prev.query\n      }; // creating copy of state variable jasper\n\n      query.Distance = e.target.value; // update the name property, assign a new value                 \n\n      return {\n        query\n      };\n    });\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, \"Post to Server:\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, this.state.response), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"Distance:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Distance\",\n      onChange: setDistance(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \"Company:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Company\",\n      onChange: e => this.setState({\n        query: {\n          Distance: e.query.Distance,\n          Company: e.target.value,\n          Timestamp: e.query.Timestamp,\n          Destination: e.query.Destination,\n          Source: e.query.Source,\n          Price: e.query.Price,\n          SurgeMultiplier: e.query.SurgeMultiplier,\n          CabType: e.query.CabType\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, \"Timestamp:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Timestamp\",\n      onChange: e => this.setState({\n        query: {\n          Distance: e.query.Distance,\n          Company: e.query.Company,\n          Timestamp: e.target.value,\n          Destination: e.query.Destination,\n          Source: e.query.Source,\n          Price: e.query.Price,\n          SurgeMultiplier: e.query.SurgeMultiplier,\n          CabType: e.query.CabType\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, \"Destination:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Destination\",\n      onChange: e => this.setState({\n        query: {\n          Distance: e.query.Distance,\n          Company: e.query.Company,\n          Timestamp: e.query.Timestamp,\n          Destination: e.target.value,\n          Source: e.query.Source,\n          Price: e.query.Price,\n          SurgeMultiplier: e.query.SurgeMultiplier,\n          CabType: e.query.CabType\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, \"Source:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Source\",\n      onChange: e => this.setState({\n        query: {\n          Distance: e.query.Distance,\n          Company: e.query.Company,\n          Timestamp: e.query.Timestamp,\n          Destination: e.query.Destination,\n          Source: e.target.value,\n          Price: e.query.Price,\n          SurgeMultiplier: e.query.SurgeMultiplier,\n          CabType: e.query.CabType\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, \"Price:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Price\",\n      onChange: e => this.setState({\n        query: {\n          Distance: e.query.Distance,\n          Company: e.query.Company,\n          Timestamp: e.query.Timestamp,\n          Destination: e.query.Destination,\n          Source: e.query.Source,\n          Price: e.target.value,\n          SurgeMultiplier: e.query.SurgeMultiplier,\n          CabType: e.query.CabType\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, \"Surge multiplier:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"SurgeMultiplier\",\n      onChange: e => this.setState({\n        query: {\n          Distance: e.query.Distance,\n          Company: e.query.Company,\n          Timestamp: e.query.Timestamp,\n          Destination: e.query.Destination,\n          Source: e.query.Source,\n          Price: e.query.Price,\n          SurgeMultiplier: e.target.value,\n          CabType: e.query.CabType\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, \"Cab type:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"CabType\",\n      onChange: e => this.setState({\n        query: {\n          Distance: e.query.Distance,\n          Company: e.query.Company,\n          Timestamp: e.query.Timestamp,\n          Destination: e.query.Destination,\n          Source: e.query.Source,\n          Price: e.query.Price,\n          SurgeMultiplier: e.query.SurgeMultiplier,\n          CabType: e.target.value\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.post,\n      onChange: e => this.setState({\n        post: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    }, this.state.responseToPost)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/ifnav/Documents/cs180/CS180/src/client/src/App.js"],"names":["React","Component","App","state","response","post","responseToPost","query","Distance","Company","Timestamp","Destination","Source","Price","SurgeMultiplier","CabType","callApi","fetch","body","json","status","Error","message","handleSubmit","e","preventDefault","method","headers","JSON","stringify","text","setState","setDistance","persist","prev","target","value","componentDidMount","then","res","express","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    response: '',\r\n    post: '',\r\n    responseToPost: '',\r\n    query: {\r\n      Distance: null,\r\n      Company: \"Uber\",\r\n      Timestamp: \"1544952607890\",\r\n      Destination: null,\r\n      Source: \"Back Bay\",\r\n      Price: null,\r\n      SurgeMultiplier: null,\r\n      CabType: null\r\n    }\r\n  };\r\n  setDistance(e){\r\n    e.persist();\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.Distance = e.target.value;                     // update the name property, assign a new value                 \r\n      return { query }; \r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.callApi()\r\n      .then(res => this.setState({ response: res.express }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  callApi = async () => {\r\n    const response = await fetch('/api/hello');\r\n    const body = await response.json();\r\n    if (response.status !== 200) throw Error(body.message);\r\n\r\n    return body;\r\n  };\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const response = await fetch('/api/query', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(this.state.query),\r\n    });\r\n    const body = await response.text();\r\n\r\n    this.setState({ responseToPost: body });\r\n  };\r\n\r\nrender() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <p>\r\n            <strong>Post to Server:</strong>\r\n          </p>\r\n          <p>{this.state.response}</p>\r\n          <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Distance:\r\n            <input type=\"text\" name=\"Distance\" \r\n              onChange={setDistance(e)}\r\n            />\r\n          </label>\r\n          <br/>\r\n          <label>\r\n            Company:\r\n            <input type=\"text\" name=\"Company\" \r\n              onChange={e => this.setState({ \r\n                query: {\r\n                  Distance: e.query.Distance,\r\n                  Company: e.target.value,\r\n                  Timestamp: e.query.Timestamp,\r\n                  Destination: e.query.Destination,\r\n                  Source: e.query.Source,\r\n                  Price: e.query.Price,\r\n                  SurgeMultiplier: e.query.SurgeMultiplier,\r\n                  CabType: e.query.CabType\r\n                }\r\n                })}\r\n            />\r\n          </label>\r\n          <br/>\r\n          <label>\r\n            Timestamp:\r\n            <input type=\"text\" name=\"Timestamp\" \r\n              onChange={e => this.setState({ \r\n                query: {\r\n                  Distance: e.query.Distance,\r\n                  Company: e.query.Company,\r\n                  Timestamp: e.target.value,\r\n                  Destination: e.query.Destination,\r\n                  Source: e.query.Source,\r\n                  Price: e.query.Price,\r\n                  SurgeMultiplier: e.query.SurgeMultiplier,\r\n                  CabType: e.query.CabType\r\n                }\r\n                })}\r\n            />\r\n          </label>      \r\n          <br/>    \r\n          <label>\r\n            Destination:\r\n            <input type=\"text\" name=\"Destination\" \r\n              onChange={e => this.setState({ \r\n                query: {\r\n                  Distance: e.query.Distance,\r\n                  Company: e.query.Company,\r\n                  Timestamp: e.query.Timestamp,\r\n                  Destination: e.target.value,\r\n                  Source: e.query.Source,\r\n                  Price: e.query.Price,\r\n                  SurgeMultiplier: e.query.SurgeMultiplier,\r\n                  CabType: e.query.CabType\r\n                }\r\n                })}\r\n            />\r\n          </label>\r\n          <br/>\r\n          <label>\r\n            Source:\r\n            <input type=\"text\" name=\"Source\" \r\n              onChange={e => this.setState({ \r\n              query: {\r\n                Distance: e.query.Distance,\r\n                Company: e.query.Company,\r\n                Timestamp: e.query.Timestamp,\r\n                Destination: e.query.Destination,\r\n                Source: e.target.value,\r\n                Price: e.query.Price,\r\n                SurgeMultiplier: e.query.SurgeMultiplier,\r\n                CabType: e.query.CabType\r\n              }\r\n              })}\r\n            />\r\n          </label>\r\n          <br/>\r\n          <label>\r\n            Price:\r\n            <input type=\"text\" name=\"Price\" \r\n              onChange={e => this.setState({ \r\n              query: {\r\n                Distance: e.query.Distance,\r\n                Company: e.query.Company,\r\n                Timestamp: e.query.Timestamp,\r\n                Destination: e.query.Destination,\r\n                Source: e.query.Source,\r\n                Price: e.target.value,\r\n                SurgeMultiplier: e.query.SurgeMultiplier,\r\n                CabType: e.query.CabType\r\n              }\r\n              })}\r\n            />\r\n          </label>\r\n          <br/>\r\n          <label>\r\n            Surge multiplier:\r\n            <input type=\"text\" name=\"SurgeMultiplier\" onChange={e => this.setState({ \r\n              query: {\r\n                Distance: e.query.Distance,\r\n                Company: e.query.Company,\r\n                Timestamp: e.query.Timestamp,\r\n                Destination: e.query.Destination,\r\n                Source: e.query.Source,\r\n                Price: e.query.Price,\r\n                SurgeMultiplier: e.target.value,\r\n                CabType: e.query.CabType\r\n              }\r\n              })}\r\n            />\r\n          </label>\r\n          <br/>\r\n          <label>\r\n            Cab type:\r\n            <input type=\"text\" name=\"CabType\" \r\n              onChange={e => this.setState({ \r\n              query: {\r\n                Distance: e.query.Distance,\r\n                Company: e.query.Company,\r\n                Timestamp: e.query.Timestamp,\r\n                Destination: e.query.Destination,\r\n                Source: e.query.Source,\r\n                Price: e.query.Price,\r\n                SurgeMultiplier: e.query.SurgeMultiplier,\r\n                CabType: e.target.value \r\n              }\r\n              })}\r\n            />\r\n          </label>\r\n          <br/>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.post}\r\n              onChange={e => this.setState({ post: e.target.value })}\r\n            />\r\n            <button type=\"submit\">Submit</button>\r\n          </form>\r\n          <p>{this.state.responseToPost}</p>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}