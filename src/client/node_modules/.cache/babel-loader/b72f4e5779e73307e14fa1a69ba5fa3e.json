{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ifnav\\\\Documents\\\\cs180\\\\CS180\\\\src\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: '',\n      post: '',\n      responseToPost: '',\n      query: {\n        Distance: null,\n        Company: null,\n        Timestamp: null,\n        Destination: null,\n        Source: null,\n        Price: null,\n        SurgeMultiplier: null,\n        CabType: null\n      }\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/hello');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/api/query', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.query)\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      });\n    };\n  }\n\n  setDistance(e) {\n    const val = e.target.value == \"\" ? null : e.target.value;\n    this.setState(prev => {\n      let query = { ...prev.query\n      }; // creating copy of state variable jasper\n\n      query.Distance = val; // update the name property, assign a new value                 \n\n      return {\n        query\n      };\n    });\n  }\n\n  setCompany(e) {\n    const val = e.target.value == \"\" ? null : e.target.value;\n    this.setState(prev => {\n      let query = { ...prev.query\n      }; // creating copy of state variable jasper\n\n      query.Company = val; // update the name property, assign a new value                 \n\n      return {\n        query\n      };\n    });\n  }\n\n  setTimestamp(e) {\n    const val = e.target.value == \"\" ? null : e.target.value;\n    this.setState(prev => {\n      let query = { ...prev.query\n      }; // creating copy of state variable jasper\n\n      query.Timestamp = val; // update the name property, assign a new value                 \n\n      return {\n        query\n      };\n    });\n  }\n\n  setDestination(e) {\n    const val = e.target.value == \"\" ? null : e.target.value;\n    this.setState(prev => {\n      let query = { ...prev.query\n      }; // creating copy of state variable jasper\n\n      query.Destination = val; // update the name property, assign a new value                 \n\n      return {\n        query\n      };\n    });\n  }\n\n  setSource(e) {\n    const val = e.target.value == \"\" ? null : e.target.value;\n    this.setState(prev => {\n      let query = { ...prev.query\n      }; // creating copy of state variable jasper\n\n      query.Source = val; // update the name property, assign a new value                 \n\n      return {\n        query\n      };\n    });\n  }\n\n  setPrice(e) {\n    const val = e.target.value == \"\" ? null : e.target.value;\n    this.setState(prev => {\n      let query = { ...prev.query\n      }; // creating copy of state variable jasper\n\n      query.Price = val; // update the name property, assign a new value                 \n\n      return {\n        query\n      };\n    });\n  }\n\n  setSurgeMultiplier(e) {\n    const val = e.target.value == \"\" ? null : e.target.value;\n    this.setState(prev => {\n      let query = { ...prev.query\n      }; // creating copy of state variable jasper\n\n      query.SurgeMultiplier = val; // update the name property, assign a new value                 \n\n      return {\n        query\n      };\n    });\n  }\n\n  setCabType(e) {\n    const val = e.target.value == \"\" ? null : e.target.value;\n    this.setState(prev => {\n      let query = { ...prev.query\n      }; // creating copy of state variable jasper\n\n      query.CabType = val; // update the name property, assign a new value                 \n\n      return {\n        query\n      };\n    });\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, \"Post to Server:\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, this.state.response), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, \"Distance:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Distance\",\n      onChange: e => this.setDistance(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, \"Company:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Company\",\n      onChange: e => this.setCompany(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, \"Timestamp:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Timestamp\",\n      onChange: e => this.setTimestamp(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, \"Destination:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Destination\",\n      onChange: e => this.setDestination(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }, \"Source:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Source\",\n      onChange: e => this.setSource(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }, \"Price:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Price\",\n      onChange: e => this.setPrice(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, \"Surge multiplier:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"SurgeMultiplier\",\n      onChange: e => this.setSurgeMultiplier(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, \"Cab type:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"CabType\",\n      onChange: e => this.setCabType(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.post,\n      onChange: e => this.setState({\n        post: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, this.state.responseToPost)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/ifnav/Documents/cs180/CS180/src/client/src/App.js"],"names":["React","Component","App","state","response","post","responseToPost","query","Distance","Company","Timestamp","Destination","Source","Price","SurgeMultiplier","CabType","callApi","fetch","body","json","status","Error","message","handleSubmit","e","preventDefault","method","headers","JSON","stringify","text","setState","setDistance","val","target","value","prev","setCompany","setTimestamp","setDestination","setSource","setPrice","setSurgeMultiplier","setCabType","componentDidMount","then","res","express","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    response: '',\r\n    post: '',\r\n    responseToPost: '',\r\n    query: {\r\n      Distance: null,\r\n      Company: null,\r\n      Timestamp: null,\r\n      Destination: null,\r\n      Source: null,\r\n      Price: null,\r\n      SurgeMultiplier: null,\r\n      CabType: null\r\n    }\r\n  };\r\n  setDistance(e){\r\n    const val = e.target.value==\"\"?null:e.target.value;\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.Distance = val;                     // update the name property, assign a new value                 \r\n      return { query }; \r\n      })\r\n  }\r\n  setCompany(e){\r\n    const val = e.target.value==\"\"?null:e.target.value;\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.Company = val;                     // update the name property, assign a new value                 \r\n      return { query }; \r\n      })\r\n  }\r\n  setTimestamp(e){\r\n    const val = e.target.value==\"\"?null:e.target.value;\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.Timestamp = val;                     // update the name property, assign a new value                 \r\n      return { query }; \r\n      })\r\n  }\r\n  setDestination(e){\r\n    const val = e.target.value==\"\"?null:e.target.value;\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.Destination = val;                     // update the name property, assign a new value                 \r\n      return { query }; \r\n      })\r\n  }\r\n  setSource(e){\r\n    const val = e.target.value==\"\"?null:e.target.value;\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.Source = val;                     // update the name property, assign a new value                 \r\n      return { query }; \r\n      })\r\n  }\r\n  setPrice(e){\r\n    const val = e.target.value==\"\"?null:e.target.value;\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.Price = val;                     // update the name property, assign a new value                 \r\n      return { query }; \r\n      })\r\n  }\r\n  setSurgeMultiplier(e){\r\n    const val = e.target.value==\"\"?null:e.target.value;\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.SurgeMultiplier = val;                     // update the name property, assign a new value                 \r\n      return { query }; \r\n      })\r\n  }\r\n  setCabType(e){\r\n    const val = e.target.value==\"\"?null:e.target.value;\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.CabType = val;                     // update the name property, assign a new value                 \r\n      return { query }; \r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.callApi()\r\n      .then(res => this.setState({ response: res.express }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  callApi = async () => {\r\n    const response = await fetch('/api/hello');\r\n    const body = await response.json();\r\n    if (response.status !== 200) throw Error(body.message);\r\n\r\n    return body;\r\n  };\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const response = await fetch('/api/query', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(this.state.query),\r\n    });\r\n    const body = await response.text();\r\n\r\n    this.setState({ responseToPost: body });\r\n  };\r\n\r\nrender() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <p>\r\n            <strong>Post to Server:</strong>\r\n          </p>\r\n          <p>{this.state.response}</p>\r\n          <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Distance:\r\n            <input type=\"text\" name=\"Distance\" \r\n              onChange={e => this.setDistance(e)}\r\n            />\r\n          </label>\r\n          <br/>\r\n          <label>\r\n            Company:\r\n            <input type=\"text\" name=\"Company\" \r\n              onChange={e => this.setCompany(e)}\r\n            />\r\n          </label>\r\n          <br/>\r\n          <label>\r\n            Timestamp:\r\n            <input type=\"text\" name=\"Timestamp\" \r\n              onChange={e => this.setTimestamp(e)}\r\n            />\r\n          </label>      \r\n          <br/>    \r\n          <label>\r\n            Destination:\r\n            <input type=\"text\" name=\"Destination\" \r\n              onChange={e => this.setDestination(e)}\r\n            />\r\n          </label>\r\n          <br/>\r\n          <label>\r\n            Source:\r\n            <input type=\"text\" name=\"Source\" \r\n              onChange={e => this.setSource(e)}\r\n            />\r\n          </label>\r\n          <br/>\r\n          <label>\r\n            Price:\r\n            <input type=\"text\" name=\"Price\" \r\n              onChange={e => this.setPrice(e)}\r\n            />\r\n          </label>\r\n          <br/>\r\n          <label>\r\n            Surge multiplier:\r\n            <input type=\"text\" name=\"SurgeMultiplier\" \r\n              onChange={e => this.setSurgeMultiplier(e)}\r\n            />\r\n          </label>\r\n          <br/>\r\n          <label>\r\n            Cab type:\r\n            <input type=\"text\" name=\"CabType\" \r\n              onChange={e => this.setCabType(e)}\r\n            />\r\n          </label>\r\n          <br/>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.post}\r\n              onChange={e => this.setState({ post: e.target.value })}\r\n            />\r\n            <button type=\"submit\">Submit</button>\r\n          </form>\r\n          <p>{this.state.responseToPost}</p>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}