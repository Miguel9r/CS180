{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ifnav\\\\Documents\\\\cs180\\\\CS180\\\\src\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; //import logo from './logo.svg';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: '',\n      post: '',\n      responseToPost: [],\n      query: {\n        Distance: null,\n        Company: null,\n        Timestamp: null,\n        Destination: null,\n        Source: null,\n        Price: null,\n        SurgeMultiplier: null,\n        CabType: null\n      }\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/hello');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/api/query', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.query)\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: JSON.parse(body)\n      });\n    };\n\n    this.deleteRow = async row => {\n      const response = await fetch('/api/delete', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          delete: row.Id\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: JSON.parse(body)\n      });\n    };\n  }\n\n  setDistance(e) {\n    const val = e.target.value == \"\" ? null : e.target.value;\n    this.setState(prev => {\n      let query = { ...prev.query\n      }; // creating copy of state variable jasper\n\n      query.Distance = val; // update the name property, assign a new value\n\n      return {\n        query\n      };\n    });\n  }\n\n  setCompany(e) {\n    const val = e.target.value == \"\" ? null : e.target.value;\n    this.setState(prev => {\n      let query = { ...prev.query\n      }; // creating copy of state variable jasper\n\n      query.Company = val; // update the name property, assign a new value\n\n      return {\n        query\n      };\n    });\n  }\n\n  setTimestamp(e) {\n    const val = e.target.value == \"\" ? null : e.target.value;\n    this.setState(prev => {\n      let query = { ...prev.query\n      }; // creating copy of state variable jasper\n\n      query.Timestamp = val; // update the name property, assign a new value\n\n      return {\n        query\n      };\n    });\n  }\n\n  setDestination(e) {\n    const val = e.target.value == \"\" ? null : e.target.value;\n    this.setState(prev => {\n      let query = { ...prev.query\n      }; // creating copy of state variable jasper\n\n      query.Destination = val; // update the name property, assign a new value\n\n      return {\n        query\n      };\n    });\n  }\n\n  setSource(e) {\n    const val = e.target.value == \"\" ? null : e.target.value;\n    this.setState(prev => {\n      let query = { ...prev.query\n      }; // creating copy of state variable jasper\n\n      query.Source = val; // update the name property, assign a new value\n\n      return {\n        query\n      };\n    });\n  }\n\n  setPrice(e) {\n    const val = e.target.value == \"\" ? null : e.target.value;\n    this.setState(prev => {\n      let query = { ...prev.query\n      }; // creating copy of state variable jasper\n\n      query.Price = val; // update the name property, assign a new value\n\n      return {\n        query\n      };\n    });\n  }\n\n  setSurgeMultiplier(e) {\n    const val = e.target.value == \"\" ? null : e.target.value;\n    this.setState(prev => {\n      let query = { ...prev.query\n      }; // creating copy of state variable jasper\n\n      query.SurgeMultiplier = val; // update the name property, assign a new value\n\n      return {\n        query\n      };\n    });\n  }\n\n  setCabType(e) {\n    const val = e.target.value == \"\" ? null : e.target.value;\n    this.setState(prev => {\n      let query = { ...prev.query\n      }; // creating copy of state variable jasper\n\n      query.CabType = val; // update the name property, assign a new value\n\n      return {\n        query\n      };\n    });\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  renderTableData() {\n    return this.state.responseToPost.map((ride, index) => {\n      const {\n        Distance,\n        Company,\n        Timestamp,\n        Destination,\n        Source,\n        Price,\n        SurgeMultiplier,\n        CabType,\n        Id\n      } = ride; //destructuring\n\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: Id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 14\n        }\n      }, Distance), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 14\n        }\n      }, Company), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 14\n        }\n      }, Timestamp), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 14\n        }\n      }, Destination), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 14\n        }\n      }, Source), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 14\n        }\n      }, Price), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 14\n        }\n      }, SurgeMultiplier), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 14\n        }\n      }, CabType), /*#__PURE__*/React.createElement(\"td\", {\n        id: \"delete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onclick: Id => this.deleteRow({\n          Id\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 30\n        }\n      }, \"Delete\")));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }, \"Uber/Lyft Cab Pickup Helper\"))), /*#__PURE__*/React.createElement(\"header\", {\n      className: \"Search-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, this.state.response), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, \"Distance: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Distance\",\n      id: \"Distance\",\n      onChange: e => this.setDistance(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }, \"Company: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Company\",\n      id: \"Company\",\n      onChange: e => this.setCompany(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, \"Timestamp: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Timestamp\",\n      id: \"Timestamp\",\n      onChange: e => this.setTimestamp(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }, \"Destination: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Destination\",\n      id: \"Destination\",\n      onChange: e => this.setDestination(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, \"Source: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Source\",\n      id: \"Source\",\n      onChange: e => this.setSource(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, \"Price: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Price\",\n      id: \"Price\",\n      onChange: e => this.setPrice(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }, \"Surge Multiplier: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"SurgeMultiplier\",\n      id: \"SurgeMultiplier\",\n      onChange: e => this.setSurgeMultiplier(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }, \"Cab Type: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"CabType\",\n      id: \"CabType\",\n      onChange: e => this.setCabType(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onclick: e => this.setState({\n        post: e.target.value,\n        responseToPost: []\n      }),\n      type: \"submit\",\n      class: \"block-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(\"button\", {\n      onclick: e => this.setState({\n        post: e.target.value\n      }),\n      type: \"submit\",\n      class: \"block-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }\n    }, \"Insert\"))), /*#__PURE__*/React.createElement(\"table\", {\n      id: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }\n    }, \"Distance\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }\n    }, \"Company\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }\n    }, \"Timestamp\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }\n    }, \"Destination\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }\n    }, \"Source\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }\n    }, \"Price\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }\n    }, \"Surge Multiplier\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }\n    }, \"Cab Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 16\n      }\n    }, this.renderTableData())));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/ifnav/Documents/cs180/CS180/src/client/src/App.js"],"names":["React","Component","App","state","response","post","responseToPost","query","Distance","Company","Timestamp","Destination","Source","Price","SurgeMultiplier","CabType","callApi","fetch","body","json","status","Error","message","handleSubmit","e","preventDefault","method","headers","JSON","stringify","text","setState","parse","deleteRow","row","delete","Id","setDistance","val","target","value","prev","setCompany","setTimestamp","setDestination","setSource","setPrice","setSurgeMultiplier","setCabType","componentDidMount","then","res","express","catch","err","console","log","renderTableData","map","ride","index","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    response: '',\r\n    post: '',\r\n    responseToPost: [],\r\n    query: {\r\n      Distance: null,\r\n      Company: null,\r\n      Timestamp: null,\r\n      Destination: null,\r\n      Source: null,\r\n      Price: null,\r\n      SurgeMultiplier: null,\r\n      CabType: null\r\n    }\r\n  };\r\n  setDistance(e){\r\n    const val = e.target.value==\"\"?null:e.target.value;\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.Distance = val;                     // update the name property, assign a new value\r\n      return { query };\r\n      })\r\n  }\r\n  setCompany(e){\r\n    const val = e.target.value==\"\"?null:e.target.value;\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.Company = val;                     // update the name property, assign a new value\r\n      return { query };\r\n      })\r\n  }\r\n  setTimestamp(e){\r\n    const val = e.target.value==\"\"?null:e.target.value;\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.Timestamp = val;                     // update the name property, assign a new value\r\n      return { query };\r\n      })\r\n  }\r\n  setDestination(e){\r\n    const val = e.target.value==\"\"?null:e.target.value;\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.Destination = val;                     // update the name property, assign a new value\r\n      return { query };\r\n      })\r\n  }\r\n  setSource(e){\r\n    const val = e.target.value==\"\"?null:e.target.value;\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.Source = val;                     // update the name property, assign a new value\r\n      return { query };\r\n      })\r\n  }\r\n  setPrice(e){\r\n    const val = e.target.value==\"\"?null:e.target.value;\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.Price = val;                     // update the name property, assign a new value\r\n      return { query };\r\n      })\r\n  }\r\n  setSurgeMultiplier(e){\r\n    const val = e.target.value==\"\"?null:e.target.value;\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.SurgeMultiplier = val;                     // update the name property, assign a new value\r\n      return { query };\r\n      })\r\n  }\r\n  setCabType(e){\r\n    const val = e.target.value==\"\"?null:e.target.value;\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.CabType = val;                     // update the name property, assign a new value\r\n      return { query };\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.callApi()\r\n      .then(res => this.setState({ response: res.express }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  callApi = async () => {\r\n    const response = await fetch('/api/hello');\r\n    const body = await response.json();\r\n    if (response.status !== 200) throw Error(body.message);\r\n\r\n    return body;\r\n  };\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const response = await fetch('/api/query', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(this.state.query),\r\n    });\r\n    const body = await response.text();\r\n\r\n    this.setState({ responseToPost: JSON.parse(body) });\r\n  };\r\n\r\n  deleteRow = async row => {\r\n    const response = await fetch('/api/delete', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({delete: row.Id}),\r\n    });\r\n    const body = await response.text();\r\n\r\n    this.setState({ responseToPost: JSON.parse(body) });\r\n  };\r\n  renderTableData() {\r\n    return this.state.responseToPost.map((ride, index) => {\r\n       const { Distance,\r\n        Company,\r\n        Timestamp,\r\n        Destination,\r\n        Source,\r\n        Price,\r\n        SurgeMultiplier,\r\n        CabType, \r\n        Id } = ride //destructuring\r\n       return (\r\n          <tr key={Id}>\r\n             <td>{Distance}</td>\r\n             <td>{Company}</td>\r\n             <td>{Timestamp}</td>\r\n             <td>{Destination}</td>\r\n             <td>{Source}</td>\r\n             <td>{Price}</td>\r\n             <td>{SurgeMultiplier}</td>\r\n             <td>{CabType}</td>\r\n             <td id=\"delete\"><button onclick={(Id) => this.deleteRow({Id})}>Delete</button></td>\r\n          </tr>\r\n       )\r\n    })\r\n }\r\n\r\nrender() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n        <p>\r\n          <strong>Uber/Lyft Cab Pickup Helper</strong>\r\n        </p>\r\n        </header>\r\n        <header className=\"Search-header\">\r\n        <p>{this.state.response}</p>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>Distance: </label>\r\n          <input type=\"text\" name=\"Distance\" id=\"Distance\"\r\n            onChange={e => this.setDistance(e)}\r\n          />\r\n          <label>Company: </label>\r\n          <input type=\"text\" name=\"Company\" id=\"Company\"\r\n            onChange={e => this.setCompany(e)}\r\n          />\r\n          <label>Timestamp: </label>\r\n          <input type=\"text\" name=\"Timestamp\" id=\"Timestamp\"\r\n            onChange={e => this.setTimestamp(e)}\r\n          />\r\n          <label>Destination: </label>\r\n          <input type=\"text\" name=\"Destination\" id=\"Destination\"\r\n            onChange={e => this.setDestination(e)}\r\n          />\r\n        <br/>\r\n          <label>Source: </label>\r\n          <input type=\"text\" name=\"Source\" id=\"Source\"\r\n            onChange={e => this.setSource(e)}\r\n          />\r\n          <label>Price: </label>\r\n          <input type=\"text\" name=\"Price\" id=\"Price\"\r\n            onChange={e => this.setPrice(e)}\r\n          />\r\n          <label>Surge Multiplier: </label>\r\n          <input type=\"text\" name=\"SurgeMultiplier\" id=\"SurgeMultiplier\"\r\n            onChange={e => this.setSurgeMultiplier(e)}\r\n          />\r\n          <label>Cab Type: </label>\r\n          <input type=\"text\" name=\"CabType\" id=\"CabType\"\r\n            onChange={e => this.setCabType(e)}\r\n          />\r\n        <br/>\r\n        <button onclick={e => this.setState({ post: e.target.value, responseToPost: [] })} type=\"submit\" class=\"block-1\">Search</button>\r\n        <button onclick={e => this.setState({ post: e.target.value })} type=\"submit\" class=\"block-2\">Insert</button>\r\n        </form>\r\n\r\n        </header>\r\n        <table id='results'>\r\n        <th>Distance</th>\r\n        <th>Company</th>\r\n        <th>Timestamp</th>\r\n        <th>Destination</th>\r\n        <th>Source</th>\r\n        <th>Price</th>\r\n        <th>Surge Multiplier</th>\r\n        <th>Cab Type</th>\r\n        <th></th>\r\n               <tbody>\r\n                  {this.renderTableData()}\r\n               </tbody>\r\n          </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}