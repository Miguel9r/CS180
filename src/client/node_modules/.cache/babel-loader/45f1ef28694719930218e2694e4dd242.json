{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ifnav\\\\Documents\\\\cs180\\\\CS180\\\\src\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Popup from \"reactjs-popup\"; //import logo from './logo.svg';\n\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: '',\n      post: '',\n      responseToPost: [],\n      query: {\n        Distance: null,\n        Company: null,\n        Timestamp: null,\n        Destination: null,\n        Source: null,\n        Price: null,\n        SurgeMultiplier: null,\n        CabType: null\n      },\n      open: false,\n      openEdit: false,\n      editField: null,\n      editRow: null,\n      editValue: null,\n      startDate: null\n    };\n\n    this.setTimestamp = date => {\n      const val = date == null ? null : date.getTime();\n      this.setState({\n        startDate: date\n      });\n      this.setState(prev => {\n        let query = { ...prev.query\n        }; // creating copy of state variable jasper\n\n        query.Timestamp = val; // update the name property, assign a new value\n\n        return {\n          query\n        };\n      });\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/hello');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.closeModal = async e => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.closeEditModal = async e => {\n      this.setState({\n        openEdit: false\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      console.log(this.state.post);\n\n      if (this.state.post == 'search') {\n        var valid = false;\n\n        for (var x in this.state.query) {\n          if (!(this.state.query[x] == null)) {\n            valid = true;\n          }\n        }\n\n        if (valid) {\n          const response = await fetch('/api/query', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state.query)\n          });\n          const body = await response.text();\n          this.setState({\n            responseToPost: JSON.parse(body)\n          });\n        }\n      } else {\n        var valid = true;\n\n        for (var x in this.state.query) {\n          if (this.state.query[x] == null) {\n            valid = false;\n          }\n        }\n\n        if (!valid) {\n          this.setState({\n            open: true\n          });\n        } else {\n          const response = await fetch('/api/insert', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state.query)\n          });\n          const body = await response.text();\n          this.setState({\n            responseToPost: JSON.parse(body)\n          });\n        }\n      }\n    };\n\n    this.deleteRow = async row => {\n      console.log(\"Heyy\");\n      const response = await fetch('/api/delete', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          delete: row.Id\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: JSON.parse(body)\n      });\n    };\n\n    this.setTheState = async (row, fieldVal) => {\n      this.setState({\n        editField: fieldVal,\n        editRow: row,\n        openEdit: true\n      });\n    };\n\n    this.updateRow = async e => {\n      e.preventDefault();\n      const response = await fetch('/api/update', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          update: this.state.editRow,\n          field: this.state.editField,\n          value: this.state.editValue\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: JSON.parse(body)\n      });\n    };\n  }\n\n  setDistance(e) {\n    const val = e.target.value === \"\" ? null : e.target.value;\n    this.setState(prev => {\n      let query = { ...prev.query\n      }; // creating copy of state variable jasper\n\n      query.Distance = val; // update the name property, assign a new value\n\n      return {\n        query\n      };\n    });\n  }\n\n  setCompany(e) {\n    const val = e.target.value === \"\" ? null : e.target.value;\n    this.setState(prev => {\n      let query = { ...prev.query\n      }; // creating copy of state variable jasper\n\n      query.Company = val; // update the name property, assign a new value\n\n      return {\n        query\n      };\n    });\n  }\n\n  setDestination(e) {\n    const val = e.target.value === \"\" ? null : e.target.value;\n    this.setState(prev => {\n      let query = { ...prev.query\n      }; // creating copy of state variable jasper\n\n      query.Destination = val; // update the name property, assign a new value\n\n      return {\n        query\n      };\n    });\n  }\n\n  setSource(e) {\n    const val = e.target.value === \"\" ? null : e.target.value;\n    this.setState(prev => {\n      let query = { ...prev.query\n      }; // creating copy of state variable jasper\n\n      query.Source = val; // update the name property, assign a new value\n\n      return {\n        query\n      };\n    });\n  }\n\n  setPrice(e) {\n    const val = e.target.value === \"\" ? null : e.target.value;\n    this.setState(prev => {\n      let query = { ...prev.query\n      }; // creating copy of state variable jasper\n\n      query.Price = val; // update the name property, assign a new value\n\n      return {\n        query\n      };\n    });\n  }\n\n  setSurgeMultiplier(e) {\n    const val = e.target.value === \"\" ? null : e.target.value;\n    this.setState(prev => {\n      let query = { ...prev.query\n      }; // creating copy of state variable jasper\n\n      query.SurgeMultiplier = val; // update the name property, assign a new value\n\n      return {\n        query\n      };\n    });\n  }\n\n  setCabType(e) {\n    const val = e.target.value === \"\" ? null : e.target.value;\n    this.setState(prev => {\n      let query = { ...prev.query\n      }; // creating copy of state variable jasper\n\n      query.CabType = val; // update the name property, assign a new value\n\n      return {\n        query\n      };\n    });\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  renderTableData() {\n    return this.state.responseToPost.map((ride, index) => {\n      const {\n        Distance,\n        Company,\n        Timestamp,\n        Destination,\n        Source,\n        Price,\n        SurgeMultiplier,\n        CabType,\n        Id\n      } = ride; //destructuring\n      //const i = ride.Id; not needed, commented out\n\n      const date = new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      }).format(Timestamp);\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: Id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.setTheState({\n          Id\n        }, \"Distance\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 18\n        }\n      }, \"Edit\"), Distance), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.setTheState({\n          Id\n        }, \"Company\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 18\n        }\n      }, \"Edit\"), Company), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.setTheState({\n          Id\n        }, \"Timestamp\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 18\n        }\n      }, \"Edit\"), date), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.setTheState({\n          Id\n        }, \"Destination\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 18\n        }\n      }, \"Edit\"), Destination), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.setTheState({\n          Id\n        }, \"Source\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 18\n        }\n      }, \"Edit\"), Source), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.setTheState({\n          Id\n        }, \"Price\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 18\n        }\n      }, \"Edit\"), Price), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.setTheState({\n          Id\n        }, \"SurgeMultiplier\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 18\n        }\n      }, \"Edit\"), SurgeMultiplier), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.setTheState({\n          Id\n        }, \"CabType\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 18\n        }\n      }, \"Edit\"), CabType), /*#__PURE__*/React.createElement(\"td\", {\n        id: \"delete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.deleteRow({\n          Id\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 30\n        }\n      }, \"Delete\")));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }\n    }, \"Uber/Lyft Cab Pickup Helper\"))), /*#__PURE__*/React.createElement(\"header\", {\n      className: \"Search-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }\n    }, this.state.response), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }\n    }, \"Distance: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Distance\",\n      id: \"Distance\",\n      onChange: e => this.setDistance(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }\n    }, \"Company: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Company\",\n      id: \"Company\",\n      onChange: e => this.setCompany(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }\n    }, \"Date: \"), /*#__PURE__*/React.createElement(DatePicker, {\n      showPopperArrow: false,\n      selected: this.state.startDate,\n      onChange: this.setTimestamp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }\n    }, \"Destination: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Destination\",\n      id: \"Destination\",\n      onChange: e => this.setDestination(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }\n    }, \"Source: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Source\",\n      id: \"Source\",\n      onChange: e => this.setSource(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }\n    }, \"Price: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Price\",\n      id: \"Price\",\n      onChange: e => this.setPrice(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }\n    }, \"Surge Multiplier: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"SurgeMultiplier\",\n      id: \"SurgeMultiplier\",\n      onChange: e => this.setSurgeMultiplier(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }\n    }, \"Cab Type: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"CabType\",\n      id: \"CabType\",\n      onChange: e => this.setCabType(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.setState({\n        post: e.target.value,\n        responseToPost: []\n      }),\n      value: \"search\",\n      type: \"submit\",\n      class: \"block-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.setState({\n        post: e.target.value\n      }),\n      type: \"submit\",\n      value: \"add\",\n      class: \"block-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }\n    }, \"Insert\"))), /*#__PURE__*/React.createElement(Popup, {\n      open: this.state.openEdit,\n      closeOnDocumentClick: true,\n      onClose: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.updateRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }\n    }, this.state.editField, \": \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"EditValue\",\n      id: \"EditValue\",\n      onChange: e => this.setState({\n        editValue: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      id: \"closeButton\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 13\n      }\n    }, \"Edit\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      id: \"closeButton\",\n      onClick: this.closeEditModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }\n    }, \"Close\"))), /*#__PURE__*/React.createElement(Popup, {\n      open: this.state.open,\n      closeOnDocumentClick: true,\n      onClose: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      id: \"errorMsg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 13\n      }\n    }, \"Error: You need to complete all fields to insert a new row.\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      id: \"closeButton\",\n      onClick: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }\n    }, \"Close\"))), /*#__PURE__*/React.createElement(\"table\", {\n      id: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }\n    }, \"Distance\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }\n    }, \"Company\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }\n    }, \"Destination\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }\n    }, \"Source\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }\n    }, \"Price\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }\n    }, \"Surge Multiplier\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }\n    }, \"Cab Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 16\n      }\n    }, this.renderTableData())));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/ifnav/Documents/cs180/CS180/src/client/src/App.js"],"names":["React","Component","Popup","Button","DatePicker","App","state","response","post","responseToPost","query","Distance","Company","Timestamp","Destination","Source","Price","SurgeMultiplier","CabType","open","openEdit","editField","editRow","editValue","startDate","setTimestamp","date","val","getTime","setState","prev","callApi","fetch","body","json","status","Error","message","closeModal","e","closeEditModal","handleSubmit","preventDefault","console","log","valid","x","method","headers","JSON","stringify","text","parse","deleteRow","row","delete","Id","setTheState","fieldVal","updateRow","update","field","value","setDistance","target","setCompany","setDestination","setSource","setPrice","setSurgeMultiplier","setCabType","componentDidMount","then","res","express","catch","err","renderTableData","map","ride","index","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Popup from \"reactjs-popup\";\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    response: '',\r\n    post: '',\r\n    responseToPost: [],\r\n    query: {\r\n      Distance: null,\r\n      Company: null,\r\n      Timestamp: null,\r\n      Destination: null,\r\n      Source: null,\r\n      Price: null,\r\n      SurgeMultiplier: null,\r\n      CabType: null\r\n    },\r\n    open: false,\r\n    openEdit: false,\r\n    editField: null,\r\n    editRow: null,\r\n    editValue: null,\r\n    startDate: null\r\n  };\r\n  setDistance(e){\r\n    const val = e.target.value===\"\"?null:e.target.value;\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.Distance = val;                     // update the name property, assign a new value\r\n      return { query };\r\n      })\r\n  }\r\n  setCompany(e){\r\n    const val = e.target.value===\"\"?null:e.target.value;\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.Company = val;                     // update the name property, assign a new value\r\n      return { query };\r\n      })\r\n  }\r\n  setTimestamp = date => {\r\n    const val = date==null?null:date.getTime();\r\n    this.setState({startDate: date});\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.Timestamp = val;               // update the name property, assign a new value\r\n      return { query };\r\n      })\r\n  }\r\n  setDestination(e){\r\n    const val = e.target.value===\"\"?null:e.target.value;\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.Destination = val;                     // update the name property, assign a new value\r\n      return { query };\r\n      })\r\n  }\r\n  setSource(e){\r\n    const val = e.target.value===\"\"?null:e.target.value;\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.Source = val;                     // update the name property, assign a new value\r\n      return { query };\r\n      })\r\n  }\r\n  setPrice(e){\r\n    const val = e.target.value===\"\"?null:e.target.value;\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.Price = val;                     // update the name property, assign a new value\r\n      return { query };\r\n      })\r\n  }\r\n  setSurgeMultiplier(e){\r\n    const val = e.target.value===\"\"?null:e.target.value;\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.SurgeMultiplier = val;                     // update the name property, assign a new value\r\n      return { query };\r\n      })\r\n  }\r\n  setCabType(e){\r\n    const val = e.target.value===\"\"?null:e.target.value;\r\n    this.setState(prev => {\r\n      let query = { ...prev.query };  // creating copy of state variable jasper\r\n      query.CabType = val;                     // update the name property, assign a new value\r\n      return { query };\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.callApi()\r\n      .then(res => this.setState({ response: res.express }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  callApi = async () => {\r\n    const response = await fetch('/api/hello');\r\n    const body = await response.json();\r\n    if (response.status !== 200) throw Error(body.message);\r\n\r\n    return body;\r\n  };\r\n  closeModal = async e => {\r\n    this.setState({ open: false });\r\n  }\r\n  closeEditModal = async e => {\r\n    this.setState({ openEdit: false });\r\n  }\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    console.log(this.state.post);\r\n    if(this.state.post == 'search'){\r\n      var valid = false;\r\n      for(var x in this.state.query)\r\n      {\r\n        if(!(this.state.query[x] == null))\r\n        {\r\n          valid = true;\r\n        }\r\n      }\r\n      if(valid){\r\n        const response = await fetch('/api/query', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(this.state.query),\r\n        });\r\n        const body = await response.text();\r\n\r\n        this.setState({ responseToPost: JSON.parse(body) });\r\n      }\r\n    }else{\r\n      var valid = true;\r\n      for(var x in this.state.query)\r\n      {\r\n        if(this.state.query[x] == null)\r\n        {\r\n          valid = false;\r\n        }\r\n      }\r\n      if(!valid){\r\n        this.setState({ open: true });\r\n      }else{\r\n        const response = await fetch('/api/insert', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(this.state.query),\r\n        });\r\n        const body = await response.text();\r\n\r\n        this.setState({ responseToPost: JSON.parse(body) });\r\n      }\r\n    }\r\n  };\r\n\r\n  deleteRow = async row => {\r\n    console.log(\"Heyy\");\r\n    const response = await fetch('/api/delete', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({delete: row.Id}),\r\n    });\r\n    const body = await response.text();\r\n\r\n    this.setState({ responseToPost: JSON.parse(body) });\r\n  };\r\n  setTheState = async (row, fieldVal) => {\r\n    this.setState({editField: fieldVal, editRow: row, openEdit: true});\r\n  }\r\n\r\n  updateRow = async e => {\r\n    e.preventDefault();\r\n    const response = await fetch('/api/update', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({update: this.state.editRow, field: this.state.editField, value: this.state.editValue}),\r\n    });\r\n    const body = await response.text();\r\n\r\n    this.setState({ responseToPost: JSON.parse(body) });\r\n  };\r\n  renderTableData() {\r\n    return this.state.responseToPost.map((ride, index) => {\r\n       const { Distance,\r\n        Company,\r\n        Timestamp,\r\n        Destination,\r\n        Source,\r\n        Price,\r\n        SurgeMultiplier,\r\n        CabType,\r\n        Id } = ride //destructuring\r\n        //const i = ride.Id; not needed, commented out\r\n        const date = new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(Timestamp);\r\n       return (\r\n          <tr key={Id}>\r\n             <td><button onClick={() => this.setTheState({Id}, \"Distance\")}>Edit</button>{Distance}</td>\r\n             <td><button onClick={() => this.setTheState({Id}, \"Company\")}>Edit</button>{Company}</td>\r\n             <td><button onClick={() => this.setTheState({Id}, \"Timestamp\")}>Edit</button>{date}</td>\r\n             <td><button onClick={() => this.setTheState({Id}, \"Destination\")}>Edit</button>{Destination}</td>\r\n             <td><button onClick={() => this.setTheState({Id}, \"Source\")}>Edit</button>{Source}</td>\r\n             <td><button onClick={() => this.setTheState({Id}, \"Price\")}>Edit</button>{Price}</td>\r\n             <td><button onClick={() => this.setTheState({Id}, \"SurgeMultiplier\")}>Edit</button>{SurgeMultiplier}</td>\r\n             <td><button onClick={() => this.setTheState({Id}, \"CabType\")}>Edit</button>{CabType}</td>\r\n             <td id=\"delete\"><button onClick={() => this.deleteRow({Id})}>Delete</button></td>\r\n          </tr>\r\n       )\r\n    })\r\n }\r\n\r\nrender() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n        <p>\r\n          <strong>Uber/Lyft Cab Pickup Helper</strong>\r\n        </p>\r\n        </header>\r\n        <header className=\"Search-header\">\r\n        <p>{this.state.response}</p>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n          <label>Distance: </label>\r\n          <input type=\"text\" name=\"Distance\" id=\"Distance\"\r\n            onChange={e => this.setDistance(e)}\r\n          /></div>\r\n          <div>\r\n          <label>Company: </label>\r\n          <input type=\"text\" name=\"Company\" id=\"Company\"\r\n            onChange={e => this.setCompany(e)}\r\n          /></div>\r\n          <div>\r\n          <label>Date: </label>\r\n          <DatePicker\r\n            showPopperArrow={false}\r\n            selected={this.state.startDate}\r\n            onChange={this.setTimestamp}\r\n          />\r\n          </div>\r\n          <div>\r\n          <label>Destination: </label>\r\n          <input type=\"text\" name=\"Destination\" id=\"Destination\"\r\n            onChange={e => this.setDestination(e)}\r\n          /></div>\r\n          <div>\r\n          <label>Source: </label>\r\n          <input type=\"text\" name=\"Source\" id=\"Source\"\r\n            onChange={e => this.setSource(e)}\r\n          /></div>\r\n          <div>\r\n          <label>Price: </label>\r\n          <input type=\"text\" name=\"Price\" id=\"Price\"\r\n            onChange={e => this.setPrice(e)}\r\n          /></div>\r\n          <div>\r\n          <label>Surge Multiplier: </label>\r\n          <input type=\"text\" name=\"SurgeMultiplier\" id=\"SurgeMultiplier\"\r\n            onChange={e => this.setSurgeMultiplier(e)}\r\n          /></div>\r\n          <div>\r\n          <label>Cab Type: </label>\r\n          <input type=\"text\" name=\"CabType\" id=\"CabType\"\r\n            onChange={e => this.setCabType(e)}\r\n          /></div>\r\n        <br/>\r\n        <button onClick={e => this.setState({ post: e.target.value, responseToPost: [] })} value=\"search\" type=\"submit\" class=\"block-1\">Search</button>\r\n        <button onClick={e => this.setState({ post: e.target.value })} type=\"submit\" value=\"add\" class=\"block-2\">Insert</button>\r\n        </form>\r\n\r\n        </header>\r\n        <Popup\r\n          open={this.state.openEdit}\r\n          closeOnDocumentClick\r\n          onClose={this.closeModal}\r\n        >\r\n          <div className=\"modal\">\r\n            <form onSubmit={this.updateRow}>\r\n            <div>\r\n            <label>{this.state.editField}: </label>\r\n            <br/>\r\n            <input type=\"text\" name=\"EditValue\" id=\"EditValue\"\r\n              onChange={e => this.setState({editValue: e.target.value})}\r\n            /></div>\r\n            <Button variant=\"contained\" id=\"closeButton\" type=\"submit\">\r\n            Edit\r\n            </Button>\r\n            </form>\r\n            <Button variant=\"contained\" id=\"closeButton\" onClick={this.closeEditModal}>\r\n            Close\r\n            </Button>\r\n          </div>\r\n        </Popup>\r\n        <Popup\r\n          open={this.state.open}\r\n          closeOnDocumentClick\r\n          onClose={this.closeModal}\r\n        >\r\n          <div className=\"modal\">\r\n            <b id=\"errorMsg\">Error: You need to complete all fields to insert a new row.</b>\r\n            <br/>\r\n            <br/>\r\n            <Button variant=\"contained\" id=\"closeButton\" onClick={this.closeModal}>\r\n            Close\r\n            </Button>\r\n          </div>\r\n        </Popup>\r\n        <table id='results'>\r\n        <th>Distance</th>\r\n        <th>Company</th>\r\n        <th>Date</th>\r\n        <th>Destination</th>\r\n        <th>Source</th>\r\n        <th>Price</th>\r\n        <th>Surge Multiplier</th>\r\n        <th>Cab Type</th>\r\n        <th></th>\r\n               <tbody>\r\n                  {this.renderTableData()}\r\n               </tbody>\r\n          </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}