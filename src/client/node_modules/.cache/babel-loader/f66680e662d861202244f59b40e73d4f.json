{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ifnav\\\\Documents\\\\cs180\\\\CS180\\\\src\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: '',\n      post: '',\n      responseToPost: '',\n      query: {\n        Distance: null,\n        Company: \"Uber\",\n        Timestamp: \"1544952607890\",\n        Destination: null,\n        Source: \"Back Bay\",\n        Price: null,\n        SurgeMultiplier: null,\n        CabType: null\n      }\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/hello');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/api/query', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.query)\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"Post to Server:\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, this.state.response), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"Distance:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Distance\",\n      onChange: e => this.setState({\n        query: {\n          Distance: e.target.value,\n          Company: e.query.Company,\n          Timestamp: e.query.Timestamp,\n          Destination: e.query.Destination,\n          Source: e.query.Source,\n          Price: e.query.Price,\n          SurgeMultiplier: e.query.SurgeMultiplier,\n          CabType: e.query.CabType\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, \"Company:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Company\",\n      onChange: e => this.setState({\n        query: {\n          Distance: query.Distance,\n          Company: e.target.value,\n          Timestamp: query.Timestamp,\n          Destination: query.Destination,\n          Source: query.Source,\n          Price: query.Price,\n          SurgeMultiplier: query.SurgeMultiplier,\n          CabType: query.CabType\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \"Timestamp:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Timestamp\",\n      onChange: e => this.setState({\n        query: {\n          Distance: query.Distance,\n          Company: query.Company,\n          Timestamp: e.target.value,\n          Destination: query.Destination,\n          Source: query.Source,\n          Price: query.Price,\n          SurgeMultiplier: query.SurgeMultiplier,\n          CabType: query.CabType\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, \"Destination:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Destination\",\n      onChange: e => this.setState({\n        query: {\n          Distance: query.Distance,\n          Company: query.Company,\n          Timestamp: query.Timestamp,\n          Destination: e.target.value,\n          Source: query.Source,\n          Price: query.Price,\n          SurgeMultiplier: query.SurgeMultiplier,\n          CabType: query.CabType\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, \"Source:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Source\",\n      onChange: e => this.setState({\n        query: {\n          Distance: query.Distance,\n          Company: query.Company,\n          Timestamp: query.Timestamp,\n          Destination: query.Destination,\n          Source: e.target.value,\n          Price: query.Price,\n          SurgeMultiplier: query.SurgeMultiplier,\n          CabType: query.CabType\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, \"Price:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Price\",\n      onChange: e => this.setState({\n        query: {\n          Distance: query.Distance,\n          Company: query.Company,\n          Timestamp: query.Timestamp,\n          Destination: query.Destination,\n          Source: query.Source,\n          Price: e.target.value,\n          SurgeMultiplier: query.SurgeMultiplier,\n          CabType: query.CabType\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }, \"Surge multiplier:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"SurgeMultiplier\",\n      onChange: e => this.setState({\n        query: {\n          Distance: query.Distance,\n          Company: query.Company,\n          Timestamp: query.Timestamp,\n          Destination: query.Destination,\n          Source: query.Source,\n          Price: query.Price,\n          SurgeMultiplier: e.target.value,\n          CabType: query.CabType\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, \"Cab type:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"CabType\",\n      onChange: e => this.setState({\n        query: {\n          Distance: query.Distance,\n          Company: query.Company,\n          Timestamp: query.Timestamp,\n          Destination: query.Destination,\n          Source: query.Source,\n          Price: query.Price,\n          SurgeMultiplier: query.SurgeMultiplier,\n          CabType: e.target.value\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.post,\n      onChange: e => this.setState({\n        post: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    }, this.state.responseToPost)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/ifnav/Documents/cs180/CS180/src/client/src/App.js"],"names":["React","Component","App","state","response","post","responseToPost","query","Distance","Company","Timestamp","Destination","Source","Price","SurgeMultiplier","CabType","callApi","fetch","body","json","status","Error","message","handleSubmit","e","preventDefault","method","headers","JSON","stringify","text","setState","componentDidMount","then","res","express","catch","err","console","log","render","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    response: '',\r\n    post: '',\r\n    responseToPost: '',\r\n    query: {\r\n      Distance: null,\r\n      Company: \"Uber\",\r\n      Timestamp: \"1544952607890\",\r\n      Destination: null,\r\n      Source: \"Back Bay\",\r\n      Price: null,\r\n      SurgeMultiplier: null,\r\n      CabType: null\r\n    }\r\n  };\r\n  \r\n\r\n  componentDidMount() {\r\n    this.callApi()\r\n      .then(res => this.setState({ response: res.express }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  callApi = async () => {\r\n    const response = await fetch('/api/hello');\r\n    const body = await response.json();\r\n    if (response.status !== 200) throw Error(body.message);\r\n\r\n    return body;\r\n  };\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const response = await fetch('/api/query', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(this.state.query),\r\n    });\r\n    const body = await response.text();\r\n\r\n    this.setState({ responseToPost: body });\r\n  };\r\n\r\nrender() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <p>\r\n            <strong>Post to Server:</strong>\r\n          </p>\r\n          <p>{this.state.response}</p>\r\n          <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Distance:\r\n            <input type=\"text\" name=\"Distance\" \r\n              onChange={e => this.setState({ \r\n                query: {\r\n                  Distance: e.target.value,\r\n                  Company: e.query.Company,\r\n                  Timestamp: e.query.Timestamp,\r\n                  Destination: e.query.Destination,\r\n                  Source: e.query.Source,\r\n                  Price: e.query.Price,\r\n                  SurgeMultiplier: e.query.SurgeMultiplier,\r\n                  CabType: e.query.CabType\r\n                }\r\n                })}\r\n            />\r\n          </label>\r\n          <br/>\r\n          <label>\r\n            Company:\r\n            <input type=\"text\" name=\"Company\" \r\n              onChange={e => this.setState({ \r\n                query: {\r\n                  Distance: query.Distance,\r\n                  Company: e.target.value,\r\n                  Timestamp: query.Timestamp,\r\n                  Destination: query.Destination,\r\n                  Source: query.Source,\r\n                  Price: query.Price,\r\n                  SurgeMultiplier: query.SurgeMultiplier,\r\n                  CabType: query.CabType\r\n                }\r\n                })}\r\n            />\r\n          </label>\r\n          <br/>\r\n          <label>\r\n            Timestamp:\r\n            <input type=\"text\" name=\"Timestamp\" \r\n              onChange={e => this.setState({ \r\n                query: {\r\n                  Distance: query.Distance,\r\n                  Company: query.Company,\r\n                  Timestamp: e.target.value,\r\n                  Destination: query.Destination,\r\n                  Source: query.Source,\r\n                  Price: query.Price,\r\n                  SurgeMultiplier: query.SurgeMultiplier,\r\n                  CabType: query.CabType\r\n                }\r\n                })}\r\n            />\r\n          </label>      \r\n          <br/>    \r\n          <label>\r\n            Destination:\r\n            <input type=\"text\" name=\"Destination\" \r\n              onChange={e => this.setState({ \r\n                query: {\r\n                  Distance: query.Distance,\r\n                  Company: query.Company,\r\n                  Timestamp: query.Timestamp,\r\n                  Destination: e.target.value,\r\n                  Source: query.Source,\r\n                  Price: query.Price,\r\n                  SurgeMultiplier: query.SurgeMultiplier,\r\n                  CabType: query.CabType\r\n                }\r\n                })}\r\n            />\r\n          </label>\r\n          <br/>\r\n          <label>\r\n            Source:\r\n            <input type=\"text\" name=\"Source\" \r\n              onChange={e => this.setState({ \r\n              query: {\r\n                Distance: query.Distance,\r\n                Company: query.Company,\r\n                Timestamp: query.Timestamp,\r\n                Destination: query.Destination,\r\n                Source: e.target.value,\r\n                Price: query.Price,\r\n                SurgeMultiplier: query.SurgeMultiplier,\r\n                CabType: query.CabType\r\n              }\r\n              })}\r\n            />\r\n          </label>\r\n          <br/>\r\n          <label>\r\n            Price:\r\n            <input type=\"text\" name=\"Price\" \r\n              onChange={e => this.setState({ \r\n              query: {\r\n                Distance: query.Distance,\r\n                Company: query.Company,\r\n                Timestamp: query.Timestamp,\r\n                Destination: query.Destination,\r\n                Source: query.Source,\r\n                Price: e.target.value,\r\n                SurgeMultiplier: query.SurgeMultiplier,\r\n                CabType: query.CabType\r\n              }\r\n              })}\r\n            />\r\n          </label>\r\n          <br/>\r\n          <label>\r\n            Surge multiplier:\r\n            <input type=\"text\" name=\"SurgeMultiplier\" onChange={e => this.setState({ \r\n              query: {\r\n                Distance: query.Distance,\r\n                Company: query.Company,\r\n                Timestamp: query.Timestamp,\r\n                Destination: query.Destination,\r\n                Source: query.Source,\r\n                Price: query.Price,\r\n                SurgeMultiplier: e.target.value,\r\n                CabType: query.CabType\r\n              }\r\n              })}\r\n            />\r\n          </label>\r\n          <br/>\r\n          <label>\r\n            Cab type:\r\n            <input type=\"text\" name=\"CabType\" \r\n              onChange={e => this.setState({ \r\n              query: {\r\n                Distance: query.Distance,\r\n                Company: query.Company,\r\n                Timestamp: query.Timestamp,\r\n                Destination: query.Destination,\r\n                Source: query.Source,\r\n                Price: query.Price,\r\n                SurgeMultiplier: query.SurgeMultiplier,\r\n                CabType: e.target.value \r\n              }\r\n              })}\r\n            />\r\n          </label>\r\n          <br/>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.post}\r\n              onChange={e => this.setState({ post: e.target.value })}\r\n            />\r\n            <button type=\"submit\">Submit</button>\r\n          </form>\r\n          <p>{this.state.responseToPost}</p>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}